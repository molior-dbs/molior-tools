# molior-deploy plugin
# vim: syntax=sh

preinit_deployment_ova()
{
  REQUIRED_HOST_COMMANDS="$REQUIRED_HOST_COMMANDS qemu-img qemu-nbd bc"
  REQUIRED_PACKAGES="$REQUIRED_PACKAGES qemu-utils bc"
  INSTALL_GRUB="yes"
  PARTSEP="p"
  do_compress=0
  lvm_rename_existing=1
}

init_deployment_ova()
{
  vmname=$(get_deployment_filename "")

  # FIXME check VM_SIZE
  echo " * creating ${VM_SIZE}MB virtual disk"
  VMDISK=$WORK_DIR/disk.vmdk
  qemu-img create -f vmdk $VMDISK ${VM_SIZE}M >&2
  exit_on_error "Error creating VirtualBox qcow2 disk '$VMDISK' with size '$VM_SIZE' MB"

  if ! grep -q "^nbd " /proc/modules; then
    modprobe nbd
    exit_on_error "Error loading kernel module nbd"
  fi

  # find free nbd device
  nb=""
  for nbdev in `ls -d /sys/class/block/nbd* | grep "nbd[0-9]\+$"`
  do
    S=`cat $nbdev/size`
    if [ "$S" -eq "0" ] ; then
      nb=`basename $nbdev`
      break
    fi
  done
  if [ -z "$nb" ]; then
    log_error "Could not find free nbd device"
  fi

  nbd=/dev/$nb
  qemu-nbd -c $nbd $VMDISK >&2
  exit_on_error "Error running qemu-nbd"

  disk=$nbd

  create_partitions

  create_fs
  mount_fs
}

deinit_deployment_ova()
{
  if [ -n "$LVM_VG" ]; then
    vgchange -an molior ${LVM_VG} >&2
  fi

  if [ -n "$nbd" ]; then
    rm -f /dev/mapper/$nb
    qemu-nbd -d $nbd >&2
    disk=""
    nbd=""
    vgscan --cache >&2
  fi
}

finalize_deployment_ova()
{
  umount_bootstrap
  umount_fs
  deinit_deployment_ova

  if [ -z "$VM_CPUS" ]; then
    VM_CPUS=2
  fi
  if [ -z "$VM_NAME" ]; then
      VM_NAME=$vmname
  fi
  if [ -z "$VM_DESCRIPTION" ]; then
    VM_DESCRIPTION="${PROJECT}_${REVISION}
Creation Date: `date -R`
Installed Packages: `cat $WORK_DIR/packages.txt | wc -l`
APT sources:
$APT_SOURCES
"
  fi
  if [ -z "$VSPHERE_VERSION" ]; then
    VSPHERE_VERSION="13"
  fi

    deployment=$vmname.ova
    VMDK_FILE=$vmname.vmdk
    VM_ID=$vmname

    mkdir $WORK_DIR/ovatmp
    qemu-img convert -f vmdk -O vmdk -o compat6,subformat=streamOptimized $VMDISK $WORK_DIR/ovatmp/$VMDK_FILE
    exit_on_error "Error converting vmdk"

    TIMESTAMP=`date -R`
    VMDK_SIZE=`stat -c %s $WORK_DIR/ovatmp/$VMDK_FILE`
    OVF_DISK_SIZE=`echo "$VM_SIZE * 1024 * 1024" | bc`
    OVF_POPULATED_SIZE=`echo "$VMDK_SIZE * 2" | bc`
    cat > $WORK_DIR/ovatmp/$VM_ID.ovf << EOF
<?xml version='1.0' encoding='UTF-8'?>
<!--Generated by molior-tools $MOLIOR_TOOLS_VERSION, UTC time: $TIMESTAMP-->
<Envelope xmlns="http://schemas.dmtf.org/ovf/envelope/1" xmlns:ovf="http://schemas.dmtf.org/ovf/envelope/1" xmlns:vmw="http://www.vmware.com/schema/ovf" xmlns:rasd="http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData" xmlns:vssd="http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData">
  <References>
    <File ovf:id="file1" ovf:href="$VMDK_FILE" ovf:size="$VMDK_SIZE"/>
  </References>
  <DiskSection>
    <Info>List of the virtual disks</Info>
    <Disk ovf:capacityAllocationUnits="byte" ovf:format="http://www.vmware.com/interfaces/specifications/vmdk.html#streamOptimized" ovf:diskId="vmdisk1" ovf:capacity="$OVF_DISK_SIZE" ovf:fileRef="file1"  ovf:populatedSize="$OVF_POPULATED_SIZE"/>
  </DiskSection>
  <NetworkSection>
    <Info>The list of logical networks</Info>
    <Network ovf:name="bridged">
      <Description>The bridged network</Description>
    </Network>
  </NetworkSection>
  <VirtualSystem ovf:id="$VM_ID">
    <Info>A Virtual system</Info>
    <Name>$VM_NAME</Name>
    <OperatingSystemSection ovf:id="96" ovf:version="10" vmw:osType="debian10_64Guest">
      <Info>The operating system installed</Info>
      <Description>Debian GNU/Linux 10 (64-bit)</Description>
    </OperatingSystemSection>
    <VirtualHardwareSection>
      <Info>Virtual hardware requirements</Info>
      <System>
        <vssd:ElementName>Virtual Hardware Family</vssd:ElementName>
        <vssd:InstanceID>0</vssd:InstanceID>
        <vssd:VirtualSystemType>vmx-$VSPHERE_VERSION</vssd:VirtualSystemType>
      </System>
      <Item>
        <rasd:AllocationUnits>hertz * 10^6</rasd:AllocationUnits>
        <rasd:Description>Number of Virtual CPUs</rasd:Description>
        <rasd:ElementName>$VM_CPUS virtual CPU(s)</rasd:ElementName>
        <rasd:InstanceID>1</rasd:InstanceID>
        <rasd:ResourceType>3</rasd:ResourceType>
        <rasd:VirtualQuantity>$VM_CPUS</rasd:VirtualQuantity>
        <vmw:CoresPerSocket ovf:required="false">1</vmw:CoresPerSocket>
      </Item>
      <Item>
        <rasd:AllocationUnits>byte * 2^20</rasd:AllocationUnits>
        <rasd:Description>Memory Size</rasd:Description>
        <rasd:ElementName>${VM_RAM}MB of memory</rasd:ElementName>
        <rasd:InstanceID>2</rasd:InstanceID>
        <rasd:ResourceType>4</rasd:ResourceType>
        <rasd:VirtualQuantity>$VM_RAM</rasd:VirtualQuantity>
      </Item>
      <Item>
        <rasd:Address>0</rasd:Address>
        <rasd:Description>SCSI Controller</rasd:Description>
        <rasd:ElementName>SCSI Controller 1</rasd:ElementName>
        <rasd:InstanceID>3</rasd:InstanceID>
        <rasd:ResourceSubType>VirtualSCSI</rasd:ResourceSubType>
        <rasd:ResourceType>6</rasd:ResourceType>
        <vmw:Config ovf:required="false" vmw:key="slotInfo.pciSlotNumber" vmw:value="160"/>
      </Item>
      <Item>
        <rasd:Address>0</rasd:Address>
        <rasd:Description>IDE Controller</rasd:Description>
        <rasd:ElementName>IDE Controller 1</rasd:ElementName>
        <rasd:InstanceID>4</rasd:InstanceID>
        <rasd:ResourceType>5</rasd:ResourceType>
      </Item>
      <Item>
        <rasd:AddressOnParent>0</rasd:AddressOnParent>
        <rasd:ElementName>Hard Disk 1</rasd:ElementName>
        <rasd:HostResource>ovf:/disk/vmdisk1</rasd:HostResource>
        <rasd:InstanceID>5</rasd:InstanceID>
        <rasd:Parent>3</rasd:Parent>
        <rasd:ResourceType>17</rasd:ResourceType>
      </Item>
      <Item>
        <rasd:AddressOnParent>0</rasd:AddressOnParent>
        <rasd:AutomaticAllocation>false</rasd:AutomaticAllocation>
        <rasd:ElementName>CD/DVD Drive 1</rasd:ElementName>
        <rasd:HostResource></rasd:HostResource>
        <rasd:InstanceID>6</rasd:InstanceID>
        <rasd:Parent>4</rasd:Parent>
        <rasd:ResourceSubType>vmware.cdrom.remotepassthrough</rasd:ResourceSubType>
        <rasd:ResourceType>15</rasd:ResourceType>
      </Item>
      <Item>
        <rasd:AddressOnParent>0</rasd:AddressOnParent>
        <rasd:AutomaticAllocation>true</rasd:AutomaticAllocation>
        <rasd:Connection>bridged</rasd:Connection>
        <rasd:ElementName>Network adapter 1</rasd:ElementName>
        <rasd:InstanceID>7</rasd:InstanceID>
        <rasd:ResourceSubType>VmxNet3</rasd:ResourceSubType>
        <rasd:ResourceType>10</rasd:ResourceType>
        <vmw:Config ovf:required="false" vmw:key="connectable.allowGuestControl" vmw:value="true"/>
        <vmw:Config ovf:required="false" vmw:key="slotInfo.pciSlotNumber" vmw:value="192"/>
        <vmw:Config ovf:required="false" vmw:key="wakeOnLanEnabled" vmw:value="true"/>
      </Item>
      <Item ovf:required="false">
        <rasd:ElementName>Video card</rasd:ElementName>
        <rasd:InstanceID>8</rasd:InstanceID>
        <rasd:ResourceType>24</rasd:ResourceType>
        <vmw:Config ovf:required="false" vmw:key="numDisplays" vmw:value="1"/>
        <vmw:Config ovf:required="false" vmw:key="useAutoDetect" vmw:value="true"/>
        <vmw:Config ovf:required="false" vmw:key="enable3DSupport" vmw:value="false"/>
        <vmw:Config ovf:required="false" vmw:key="use3dRenderer" vmw:value="automatic"/>
        <vmw:Config ovf:required="false" vmw:key="videoRamSizeInKB" vmw:value="8192"/>
        <vmw:Config ovf:required="false" vmw:key="graphicsMemorySizeInKB" vmw:value="262144"/>
        <vmw:Config ovf:required="false" vmw:key="enableMPTSupport" vmw:value="false"/>
      </Item>
      <vmw:Config ovf:required="false" vmw:key="cpuHotAddEnabled" vmw:value="true"/>
      <vmw:Config ovf:required="false" vmw:key="nestedHVEnabled" vmw:value="false"/>
      <vmw:Config ovf:required="false" vmw:key="virtualSMCPresent" vmw:value="false"/>
      <vmw:Config ovf:required="false" vmw:key="cpuHotRemoveEnabled" vmw:value="false"/>
      <vmw:Config ovf:required="false" vmw:key="memoryHotAddEnabled" vmw:value="false"/>
      <vmw:Config ovf:required="false" vmw:key="virtualICH7MPresent" vmw:value="false"/>
EOF
  if [ "$TARGET_BOOTTYPE" = "efi" ]; then
    cat >> $WORK_DIR/ovatmp/$VM_ID.ovf << EOF
      <vmw:Config ovf:required="false" vmw:key="firmware" vmw:value="efi"/>
EOF
  fi
    cat >> $WORK_DIR/ovatmp/$VM_ID.ovf << EOF
    </VirtualHardwareSection>
    <AnnotationSection ovf:required="false">
      <Info>A human-readable annotation</Info>
      <Annotation>$VM_DESCRIPTION</Annotation>
    </AnnotationSection>
  </VirtualSystem>
</Envelope>
EOF
    cd $WORK_DIR/ovatmp
    tar -cf $WORK_DIR/$deployment *.ovf *.vmdk
    cd - >/dev/null
}
