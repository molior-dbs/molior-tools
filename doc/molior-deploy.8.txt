NAME
 molior-deploy - create deployments from molior projects

SYNOPSIS
 molior-deploy [OPTIONS] PROJECT VERSION

DESCRIPTION
 molior-deploy creates various types of deployments for molior projects. This is done by downloading the
 top level source package of a molior project version (or using a local source directory, in order to find
 the deployment configuration located in the deploy/ directory (*.conf files).

 The deployment configuration files specify the type of deployment and additional information needed to create
 the deployment and consist of shell script which is sourced by the mail molior-deploy command.

 Standard deployment types are supported via plugins and custom deployment types can be defined inside the
 configuration files.

 Currently the following standard deployment types are supported:
  dir          Directory Archive (rootfs)
  docker       Docker Container Image
  image        Disk Image
  info         Deployment Information (package list, dependencies, licenses, ...)
  installer    ISO Installer
  lxd          LXD Container Image
  pxeinst      PXE Installer
  upgrade      Offline Upgrade APT Repository
  vbox         VirtualBox Appliance
  vhd          Virtual Disk Image (VHD)

OPTIONS
  -l                List deployment variants
  -n PACKAGE_NAME   Package name (Default: same as PROJECT name)
  -s SOURCE_DIR     Use local source tree (Default: download source package)
  -v VARIANT        Deployment variant to generate (Default: ask)
  -p PRJSRC_FILE    Do not download project APT source list from molior sever, use file contents
  -m MOLIOR_SERVER  Molior server to use (Default in ~/.moliorrc)
  -a APTLY_SERVER   Aptly server to use (Default in ~/.moliorrc)
  -A                Override project apt sources with APTLY_SERVER
  -V PKG_VERSION    Pin pkg version to install. Dangerous, use with care!
  -O                Automatically find top level package in the available project versions
  -o OVERLAY_BASE   Specify overlay base and fetch top level package from there
  -c                Cleanup on error (Default: ask)
  -f                Build all variants (Default: ask)
  -F OUTPUT_FILE    Custom deployment output's filename
  -d                Print debug output to stdout instead of file
  -t                Text output only, do not print colored output
  -r                Create rootfs only, do not create final deployment (to be used for -b)
  -b ROOTFS_TAR     Use existing rootfs (tar) as base for deployment (separately created with -r)
  -L                Keep log file for successful runs

COMMON PARAMETERS

 DEPLOYMENT_TYPE          Deployment type (plugin) to be used (mandatory)
 ARCH                     Target machine architecture (amd64, i386, armhf, arm64)
 TARGET_HOSTNAME          Hostname to be set
 INSTALL_PACKAGE          Package to be installed (default: top level package with same name as project)
 DEPLOYMENT_COMPRESSION   Compression method to be used for output (xz, gzip, none)
 PRESEED_FILE             Debconf preseed file (relative to source repository)
 MOLIOR_PROJECTINFO_FILE  Write the PROJECT/VERSION to this file in the deployment

FILESYSTEM PARAMETERS
 Partitions and filesystems may be created by defining the following parameters.
 LVM partition is supported and can be combines with legacy partitions.
 Up to 16 partitions / logical volumes are currently supported, and 1 physical volume or a full disk for LVM.

 SFDISK             Input for sfdisk partitioning
 PART#_FS           Filesystem of partition # (ext4, ... or 'lvm' for LVM physical volume)
 PART#_MNT          Mountpoint of partition #
 PART#_OPTS         fstab options (i.e. "defaults,noatime")
 PART#_MKFSOPTS     Options for mkfs (i.e. "-O ^64bit,^metadata_csum")

 LVM_VG             LVM volume group name
 LVM_PV             LVM physical volume (partition device or 'disk' for full disk)

 LVM_LV#_NAME       LVM logical volume # name
 LVM_LV#_SIZE       LVM logical volume # size (postfixed by M,G,...)
 LVM_LV#_FS         LVM logical volume # filesystem (ext4, ... or 'swap' / 'encrypted-swap')
 LVM_LV#_CRYPTTAB   LVM logical volume # crypttab entry (i.e. "/dev/urandom  swap,cipher=aes-cbc-null,size=256")
 LVM_LV#_MNT        LVM logical volume # mountpoint
 LVM_LV#_OPTS       LVM logical volume # fstab options (i.e. "defaults,noatime")
 LVM_LV#_MKFSOPTS   Options for mkfs (i.e. "-O ^64bit,^metadata_csum")

BOOT PARAMETERS
 LINUX_CMDLINE      Set Linux command line options (i.e. "biosdevname=0 net.ifnames=0 init=/lib/systemd/systemd)

OPTIONAL PARAMETERS

 APT_SOURCES_EXTRA  Additional entries for /etc/apt/sources.list
 APT_INSTALL_EXTRA  Additional packages to install
 MINIMIZE           Set to 1 to prevent installation of package docs and manpages
 ROOTDEVICE         Set root device (i.e. "/dev/ubi0_0", default: auto detect)
 ROOTFS             Set root filesystem (i.e. ubifs, default: auto detect)
 ROOTFSOPTS         Set root filesystem fstab entry options (i.e. "defaults,noatime")

 EXTRA_BIND_MOUNTS  Set extra fstab entries for bind mounts, colon separated destination:source (i.e. "/tmp:/var/tmp")

NOTE
 Do not interrupt molior-deploy with Ctrl-C, this might cause an inconsistent system state, since fileystems might be still mounted.

EXIT STATUS
 The program returns 0 when the deployment creation was successful, 1 if something went wrong.

FILES

 ~/.moliorrc                                User configuration file
 /usr/lib/molior-deploy/plugins/*.plugin    Deployment plugins
 deploy/*.conf                              Deployment configuration (inside source package/repository)

EXAMPLE

  Create a deployment for myproject version 0.1 (this will ask if multiple deployment configurations are found):

	$ sudo molior-deploy myproject 0.1

  Example deployment configuration (VirtualBox with LVM and guest utils):

	$ cat deploy/vbox.conf
	# vim: syntax=sh

	DEPLOYMENT_TYPE=vbox
	ARCH=amd64
	TARGET_HOSTNAME=$PROJECT-demo
	LINUX_CMDLINE="biosdevname=0 net.ifnames=0 init=/lib/systemd/systemd nomodeset systemd.show_status=0 loglevel=0"
	INSTALL_PACKAGE=vbox-demo

	MINIMIZE=1   # do not install docs and manpages

	VMSIZE=24576 # 24MB
	VMRAM=2048
	VMVRAM=128

	APT_SOURCES_EXTRA="deb http://debrepo/mirrors/stretch-backports stretch-backports main contrib non-free"
	APT_INSTALL_EXTRA="virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"

	SFDISK="unit: sectors
	/boot: Id=83, size=256M, bootable
	lvm-pv: Id=8e"

	PART1_FS="ext4"
	PART1_MNT=/boot
	PART2_FS=lvm

	LVM_VG=base

	LVM_LV1_NAME=swap
	LVM_LV1_SIZE=512M
	LVM_LV1_FS=swap

	LVM_LV2_NAME=root
	LVM_LV2_MNT=/
	LVM_LV2_SIZE=4G
	LVM_LV2_FS="ext4"

	LVM_LV3_NAME=opt
	LVM_LV3_MNT=/opt
	LVM_LV3_SIZE=16G
	LVM_LV3_FS="ext4"

AUTHORS
 Please see the AUTHORS file in the source repositories.

 The project homepage is <https://github.com/molior-dbs>

SEE ALSO
 molior-deploy-dir(8), molior-deploy-docker(8), molior-deploy-image(8), molior-deploy-info(8), molior-deploy-installer(8), molior-deploy-lxd(8), molior-deploy-pxeinst(8), molior-deploy-upgrade(8), molior-deploy-vbox(8), molior-deploy-vhd(8), create-release(1), molior-archive-sources(1), molior-sbuild(1), molior-trigger(1), add-molior-repo(8)

